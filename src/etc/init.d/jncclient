#! /bin/sh
### BEGIN INIT INFO
# Provides:          skeleton
# Required-Start:    $remote_fs $syslog
# Required-Stop:     $remote_fs $syslog
# Default-Start:     2 3 4 5
# Default-Stop:      0 1 6
# Short-Description: Example initscript
# Description:       This file should be used to construct scripts to be
#                    placed in /etc/init.d.
### END INIT INFO

# Author: Foo Bar <foobar@baz.org>
#
# Please remove the "Author" lines above and replace them
# with your own name if you copy and modify this script.

# Do NOT "set -e"

# PATH should only include /usr/* if it runs after the mountnfs.sh script
PATH=/sbin:/usr/sbin:/bin:/usr/bin
DESC="Description of the service"
NAME=jncclient
DAEMON=/usr/sbin/$NAME
PIDFILE=/var/run/$NAME.pid
SCRIPTNAME=/etc/init.d/$NAME

# Exit if the package is not installed
[ -x "$DAEMON" ] || exit 0

# Read configuration variable file if it is present
[ -r /etc/default/$NAME ] && . /etc/default/$NAME

# Load the VERBOSE setting and other rcS variables
. /lib/init/vars.sh

# Define LSB log_* functions.
# Depend on lsb-base (>= 3.2-14) to ensure that this file is present
# and status_of_proc is working.
. /lib/lsb/init-functions

#
# Function that starts the daemon/service
#
# Return
#   0 if daemon has been started
#   1 if daemon was already running
#   2 if daemon could not be started
do_start()
{
    if [ "$HOST" ]; then
        NCSVC_ARGS="$NCSVC_ARGS -h '$HOST'"
    fi
    if [ "$CERT" ]; then
        NCSVC_ARGS="$NCSVC_ARGS -f '$CERT'"
    fi
    if [ "$USER" ]; then
        NCSVC_ARGS="$NCSVC_ARGS -u '$USER'"
    fi
    if [ "$PASSWORD" ]; then
        NCSVC_ARGS="$NCSVC_ARGS -p '$PASSWORD'"
    fi
    if [ "$REALM" ]; then
        NCSVC_ARGS="$NCSVC_ARGS -r '$REALM'"
    fi
    if [ "$URL" ]; then
        NCSVC_ARGS="$NCSVC_ARGS -u '$URL'"
    fi
    if [ "$LOG_LEVEL" ]; then
        NCSVC_ARGS="$NCSVC_ARGS -l '$LOG_LEVEL'"
    fi
    if [ "$UP_SCRIPT" ]; then
        WRAPPER_ARGS="$WRAPPER_ARGS -u '$UP_SCRIPT'"
    fi
    if [ "$DOWN_SCRIPT" ]; then
        WRAPPER_ARGS="$WRAPPER_ARGS -d '$DOWN_SCRIPT'"
    fi

    su -c "jncclient $WRAPPER_ARGS -- $NCSVC_ARGS" 1> /tmp/jncclient.log 2> /tmp/jncclient.err &
}

#
# Function that stops the daemon/service
#
do_stop()
{
	su -c "jncclient -- -K" 1>> /tmp/jncclient.log 2>> /tmp/jncclient.err
}

case "$1" in
  start)
	[ "$VERBOSE" != no ] && log_daemon_msg "Starting $DESC" "$NAME"
	do_start
	case "$?" in
		0|1) [ "$VERBOSE" != no ] && log_end_msg 0 ;;
		2) [ "$VERBOSE" != no ] && log_end_msg 1 ;;
	esac
	;;
  stop)
	[ "$VERBOSE" != no ] && log_daemon_msg "Stopping $DESC" "$NAME"
	do_stop
	case "$?" in
		0|1) [ "$VERBOSE" != no ] && log_end_msg 0 ;;
		2) [ "$VERBOSE" != no ] && log_end_msg 1 ;;
	esac
	;;
  restart)
	#
	# If the "reload" option is implemented then remove the
	# 'force-reload' alias
	#
	log_daemon_msg "Restarting $DESC" "$NAME"
	do_stop
	case "$?" in
	  0|1)
		do_start
		case "$?" in
			0) log_end_msg 0 ;;
			1) log_end_msg 1 ;; # Old process is still running
			*) log_end_msg 1 ;; # Failed to start
		esac
		;;
	  *)
		# Failed to stop
		log_end_msg 1
		;;
	esac
	;;
  *)
	echo "Usage: $SCRIPTNAME {start|stop|restart}" >&2
	exit 3
	;;
esac

:
